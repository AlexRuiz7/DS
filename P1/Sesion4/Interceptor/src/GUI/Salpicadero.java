/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.CuentaRevoluciones;
import GUI.CuentaKilometros;
import controlVelocidad.Objetivo;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author pablorobles
 */
public class Salpicadero extends javax.swing.JPanel implements Observer{
    
    protected Objetivo miObjetivo;
    
    /**
     * Creates new form Salpicadero
     */
    public Salpicadero() {
        initComponents();
    }
    
    public void actualizarVelocidad(double v){
        this.velocimetro.actualizar(v);
    }
    
    public void actualizarDistancias(double d){
        this.cuentaKilometros.actualizarReciente(d);
        this.cuentaKilometros.actualizarTotal(d);
    }
    
    public void actualizarRPM(double rpm){
        this.cuentaRevoluciones.actualizar(rpm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        velocimetro = new GUI.Velocimetro();
        cuentaKilometros = new GUI.CuentaKilometros();
        cuentaRevoluciones = new GUI.CuentaRevoluciones();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Salpicadero"));
        setPreferredSize(new java.awt.Dimension(400, 300));
        setLayout(new java.awt.GridLayout(3, 1));
        add(velocimetro);
        add(cuentaKilometros);
        add(cuentaRevoluciones);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.CuentaKilometros cuentaKilometros;
    private GUI.CuentaRevoluciones cuentaRevoluciones;
    private GUI.Velocimetro velocimetro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        this.actualizarVelocidad(this.miObjetivo.getVelocidad());
        this.actualizarDistancias(this.miObjetivo.getDistanciaRecorrida());
        this.actualizarRPM(this.miObjetivo.getRPM());
    }
}
